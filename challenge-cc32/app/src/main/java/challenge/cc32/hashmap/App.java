/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package challenge.cc32.hashmap;

import challenge.cc32.TreeIntersection.BinaryTree;
import challenge.cc32.TreeIntersection.TreeIntersection;

import java.util.Set;

public class App {

    public static void main(String[] args) {
        // Create and populate binary trees
        BinaryTree tree1 = new BinaryTree();
        BinaryTree tree2 = new BinaryTree();

        // add values into the first tree
        tree1.add(100);
        tree1.add(125);
        tree1.add(200);
        tree1.add(175);
        tree1.add(300);
        tree1.add(160);
        tree1.add(350);
        tree1.add(4);
        tree1.add(500);

        // add values into the second tree
        tree2.add(100);
        tree2.add(125);
        tree2.add(200);
        tree2.add(75);
        tree2.add(175);
        tree2.add(160);
        tree2.add(350);
        tree2.add(500);

        // Find common values between the two trees
        Set<Integer> commonValues = TreeIntersection.tree_intersection(tree1, tree2);

        for (Integer value : commonValues) {
            System.out.print(value + " ");
        }

    }


}
