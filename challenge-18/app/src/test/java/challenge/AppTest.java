/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package challenge;

import DataStructures.tree.FizzBuzzTree;
import DataStructures.tree.TreeNode;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    @Test
    public void testFizzBuzzModifications() {
        TreeNode root = new TreeNode("1");
        root.getChildren().add(new TreeNode("3")); // Fizz
        root.getChildren().add(new TreeNode("5")); // Buzz
        root.getChildren().add(new TreeNode("15")); // FizzBuzz

        // Apply FizzBuzz transformations
        TreeNode result = FizzBuzzTree.fizzBuzzTree(root);

        assertEquals("1", result.getValue()); // Root should remain unchanged (not divisible by 3 or 5)
        assertEquals("Fizz", result.getChildren().get(0).getValue()); // "3" should be Fizz
        assertEquals("Buzz", result.getChildren().get(1).getValue()); // "5" should be Buzz
        assertEquals("FizzBuzz", result.getChildren().get(2).getValue()); // "15" should be FizzBuzz
    }

    @Test
    public void testEmptyTree() {
        TreeNode emptyTree = null;
        TreeNode result = FizzBuzzTree.fizzBuzzTree(emptyTree);
        assertNull(result);
    }

    @Test
    public void testSingleNodeTree() {
        TreeNode singleNodeTree = new TreeNode("7"); // Not divisible by 3 or 5
        TreeNode result = FizzBuzzTree.fizzBuzzTree(singleNodeTree);
        assertEquals("7", result.getValue()); // Should remain unchanged
    }

}
